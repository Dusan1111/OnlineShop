@model OnlineShop.ViewModels.ProductViewModel
@{

}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Html.BeginForm("Save", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    <div class="form-horizontal" data-remote="true">
        <form role="form" id="newModalForm">

            <div class="modal-header" id="myModalLabel" style="background:steelblue;text-align:center">
                <h5 class="modal-title" style="color:white">Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>

            @Html.ValidationSummary(true, "Please fix the following errors")

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter product name" } })
                    @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.UnitOfMeasurement, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Product.UnitOfMeasurement, new SelectList(Model.MeasurementsList), "Select measurement", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Product.UnitOfMeasurement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.ProductCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Product.ProductCategoryId, new SelectList(Model.ProductCategories, "Id", "Name"), "Select product category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Product.ProductCategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    <input type="file" name="ImageData" id="ImageData" onchange="show(this);" />
                    <img src="#" width="100" height="100" />
                </div>
            </div>
            @*<div class="form-group">
                    <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                    <img width="100" height="100" />
                </div>*@

            @*<div>
                    <img id="user_img"
                         height="100"
                         width="90"
                         style="border:solid" />
                </div>*@


            @Html.HiddenFor(m => m.Product.Id)
            @Html.AntiForgeryToken()

            <div class="modal-footer">
                <button type="submit" class="btn btn-outline-primary">Save</button>
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal" aria-hidden="true">Cancel</button>
            </div>
        </form>
    </div>
}



@section scripts
{ 
        <script type="text/javascript">
    /* The uploader form */
    $(function () {
        $("ImageData").change(function () {
            if (this.files && this.files[0]) {
                var reader = new FileReader();

                reader.onload = imageIsLoaded;
                reader.readAsDataURL(this.files[0]);
            }
        });
    });

</script>
  
}


